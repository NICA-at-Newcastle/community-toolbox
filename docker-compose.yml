version: "3"

networks:
  backend:
    external: true

services:

  # app:
  #   image: zzrot/alpine-caddy
  #   ports:
  #     - 80:80
  #     - 443:443
  #   environment:
  #     - API_ADDRESS
  #   volumes:
  #     - ./Caddyfile:/etc/Caddyfile
  #     - ./app/serve:/var/www/html
  #     - ./.caddy:/root/.caddy
  #   links:
  #     - api

  # api:
  #   build: ./api
  #   ports:
  #     - 3000:3000
  #   restart: always
  #   volumes:
  #     - ./api:/app
  #   links:
  #     - redis
  #     - mongo
  #   depends_on:
  #     - redis

  # mongo:
  #   build: ./docker/mongo
  #   restart: always
  #   environment:
  #     - MONGODB_ADMIN_USER
  #     - MONGODB_ADMIN_PASS
  #     - MONGODB_APPLICATION_DATABASE
  #     - MONGODB_APPLICATION_USER
  #     - MONGODB_APPLICATION_PASS
  #   volumes_from:
  #     - mongodata
  #   ports:
  #     - "27018:27017"
  #   # command: mongod--auth
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ADMIN_PASS}
      MONGO_INITDB_DATABASE: ${MONGODB_APPLICATION_DATABASE}
      MONGODB_APPLICATION_USER: ${MONGODB_APPLICATION_USER}
      MONGODB_APPLICATION_PASS: ${MONGODB_APPLICATION_PASS}
    volumes:
      - ./db:/data/db:rw
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    ports:
      - 27018:27017
    networks:
      - backend

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ADMIN_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ADMIN_PASS}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_ADMIN_USER}:${MONGODB_ADMIN_PASS}@mongo:27017/
    depends_on:
      - mongo
    networks:
      - backend
    # mongoui:
    #   image: twnel/mongo-express
    #   environment:
    #     - ME_CONFIG_BASICAUTH_USERNAME
    #     - ME_CONFIG_BASICAUTH_PASSWORD
    #     - ME_CONFIG_MONGODB_ENABLE_ADMIN
    #     - ME_CONFIG_MONGODB_ADMINUSERNAMEÃ§
    #     - ME_CONFIG_MONGODB_ADMINPASSWORD
    #   ports:
    #     - "8081:8081"
    #   links:
    #     - mongo

    # mongodata:
    #   image: tianon/true
    #   platform: linux/amd64
    #   volumes:
    #     - /data/db

    # mongobackup:
    #   build: ./utilities/backup
    #   restart: always
    #   links:
    #     - mongo
    #   ports:
    #     - 27017
    #   environment:
    #     - MONGO_HOST
    #     - MONGO_DB
    #     - MONGO_PORT
    #     - S3_BUCKET
    #     - AWS_ACCESS_KEY_ID
    #     - AWS_SECRET_ACCESS_KEY
    #     #- DATE_FORMAT
    #     #- FILE_PREFIX
    #     - MONGODB_APPLICATION_USER
    #     - MONGODB_APPLICATION_PASS
    #     - BACKUP_TIME=18:02

  redis:
    image: redis:4.0.5-alpine
    restart: always
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
    networks:
      - backend

volumes:
  redis-data:
